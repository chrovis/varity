name: build

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8', '11', '16']
        clojure: ['1.8', '1.9', '1.10', '1.11']
    name: Test with Java ${{ matrix.java }} and Clojure ${{ matrix.clojure }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-lein-${{ hashFiles('**/project.clj') }}
        restore-keys: |
          ${{ runner.os }}-lein-
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: ${{ matrix.java }}
    - name: Install dependencies
      run: lein deps
    - name: Run tests
      run: lein with-profile +${{ matrix.clojure }} test

  coverage:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-lein-${{ hashFiles('**/project.clj') }}
        restore-keys: |
          ${{ runner.os }}-lein-
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
    - name: Install dependencies
      run: lein deps
    - name: Generate code coverage
      run: lein cloverage --codecov
    - uses: codecov/codecov-action@v3
      with:
        files: ./target/coverage/codecov.json

  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
    - uses: actions/checkout@v2
    - name: Get version
      id: get-version
      run: |
        echo ::set-output \
          name=version::$(head -n 1 project.clj | sed -e 's/^(defproject.*"\(.*\)"$/\1/')

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [test, get-version]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
    - name: Deploy
      if: endsWith(needs.get-version.outputs.version, '-SNAPSHOT')
      env:
        CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
        CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
      run: lein deploy snapshots
